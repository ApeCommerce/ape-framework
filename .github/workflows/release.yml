name: Release NPM packages

run-name: Release ${{ github.ref_name }}

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v0.0.0-dev.[0-9]+

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        id: tag
        run: |
          tag=${{ github.ref_name }}
          version=${tag:1}
          is_dev=${{ startsWith(github.ref_name, 'v0.0.0-dev') }}
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "is_dev=$is_dev" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: yarn

      - name: Run linter
        run: yarn lint

      - name: Run unit tests
        run: yarn test

      # - name: Run integration tests
      #   run: ./docker-compose-test.sh

      - name: Publish main package to NPM
        run: |
          yarn build:main
          ./package.js main
          sed -i "s|__version__|${{ steps.tag.outputs.version }}|" dist/main/package.json
          sed -i "s|__description__|${{ github.event.repository.description }}|" dist/main/package.json
          cd $GITHUB_WORKSPACE/dist/main
          npm publish --tag=${{ steps.tag.outputs.is_dev == 'true' && 'dev' || 'latest' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish shared package to NPM
        run: |
          yarn build:shared
          ./package.js shared
          sed -i "s|__version__|${{ steps.tag.outputs.version }}|" dist/shared/package.json
          sed -i "s|__description__|${{ github.event.repository.description }}|" dist/shared/package.json
          cd $GITHUB_WORKSPACE/dist/shared
          npm publish --tag=${{ steps.tag.outputs.is_dev == 'true' && 'dev' || 'latest' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
